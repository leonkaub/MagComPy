#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.6 on Wed Feb 24 10:40:43 2021
#

import wx

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyPrepFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyPrepFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((705, 646))
        
        # Menu Bar
        self.frame_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        item = wxglade_tmp_menu.Append(wx.ID_ANY, "About", "")
        self.Bind(wx.EVT_MENU, self.on_about, id=item.GetId())
        item = wxglade_tmp_menu.Append(wx.ID_ANY, "Exit", "")
        self.Bind(wx.EVT_MENU, self.on_exit, id=item.GetId())
        self.frame_menubar.Append(wxglade_tmp_menu, "File")
        self.SetMenuBar(self.frame_menubar)
        # Menu Bar end
        self.base_checkbox = wx.CheckBox(self, wx.ID_ANY, "")
        self.base_fname = wx.TextCtrl(self, wx.ID_ANY, "")
        self.base_file_btn = wx.Button(self, wx.ID_ANY, "Browse")
        self.base_plot_btn = wx.Button(self, wx.ID_ANY, "Plot base data")
        self.sensor_radio_box = wx.RadioBox(self, wx.ID_ANY, "Select a sensor", choices=["MagArrow", "MagDrone"], majorDimension=1, style=wx.RA_SPECIFY_ROWS)
        self.file_fname = wx.TextCtrl(self, wx.ID_ANY, "")
        self.file_btn = wx.Button(self, wx.ID_ANY, "Browse")
        self.flightlog_radio_box = wx.RadioBox(self, wx.ID_ANY, "", choices=["Yes", "No"], majorDimension=1, style=wx.RA_SPECIFY_ROWS)
        self.flightlog_file = wx.TextCtrl(self, wx.ID_ANY, "")
        self.fligthlog_btn = wx.Button(self, wx.ID_ANY, "Browse")
        self.start_btn = wx.Button(self, wx.ID_ANY, "Start")
        self.log_text = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.HSCROLL | wx.TE_MULTILINE | wx.TE_READONLY)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.on_base_file_btn, self.base_file_btn)
        self.Bind(wx.EVT_BUTTON, self.on_base_plot_btn, self.base_plot_btn)
        self.Bind(wx.EVT_BUTTON, self.on_file_btn, self.file_btn)
        self.Bind(wx.EVT_BUTTON, self.on_flightlog_btn, self.fligthlog_btn)
        self.Bind(wx.EVT_BUTTON, self.on_start_btn, self.start_btn)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyPrepFrame.__set_properties
        self.SetTitle("Prepare files")
        self.base_checkbox.SetValue(1)
        self.sensor_radio_box.SetSelection(0)
        self.flightlog_radio_box.SetSelection(1)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyPrepFrame.__do_layout
        main_sizer = wx.BoxSizer(wx.VERTICAL)
        log_sizer = wx.BoxSizer(wx.VERTICAL)
        flightlog_sizer = wx.BoxSizer(wx.VERTICAL)
        flightlog_file_sizer = wx.BoxSizer(wx.HORIZONTAL)
        sensor_sizer = wx.BoxSizer(wx.VERTICAL)
        file_sizer = wx.BoxSizer(wx.HORIZONTAL)
        base_sizer = wx.BoxSizer(wx.HORIZONTAL)
        title = wx.StaticText(self, wx.ID_ANY, "Process files for further use with MagComPy")
        title.SetFont(wx.Font(12, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, "Segoe UI"))
        main_sizer.Add(title, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 5)
        base_label = wx.StaticText(self, wx.ID_ANY, "Basestation file")
        base_sizer.Add(base_label, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        base_sizer.Add(self.base_checkbox, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
        base_sizer.Add(self.base_fname, 1, wx.ALIGN_CENTER_VERTICAL, 0)
        base_sizer.Add(self.base_file_btn, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
        base_sizer.Add(self.base_plot_btn, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        main_sizer.Add(base_sizer, 0, wx.ALL | wx.EXPAND, 5)
        sensor_sizer.Add(self.sensor_radio_box, 0, wx.EXPAND, 0)
        file_label = wx.StaticText(self, wx.ID_ANY, "Select a file to process")
        file_sizer.Add(file_label, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
        file_sizer.Add(self.file_fname, 1, wx.ALIGN_CENTER_VERTICAL, 0)
        file_sizer.Add(self.file_btn, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
        sensor_sizer.Add(file_sizer, 0, wx.BOTTOM | wx.EXPAND | wx.TOP, 5)
        main_sizer.Add(sensor_sizer, 0, wx.ALL | wx.EXPAND, 5)
        flightlog_label = wx.StaticText(self, wx.ID_ANY, "Merge with GNSS data from UAS flightlog?")
        flightlog_sizer.Add(flightlog_label, 0, 0, 0)
        flightlog_sizer.Add(self.flightlog_radio_box, 0, wx.EXPAND, 0)
        flightlog_file_label = wx.StaticText(self, wx.ID_ANY, "Flightlog file")
        flightlog_file_sizer.Add(flightlog_file_label, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
        flightlog_file_sizer.Add(self.flightlog_file, 1, wx.ALIGN_CENTER_VERTICAL, 0)
        flightlog_file_sizer.Add(self.fligthlog_btn, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
        flightlog_sizer.Add(flightlog_file_sizer, 1, wx.EXPAND, 0)
        main_sizer.Add(flightlog_sizer, 0, wx.ALL | wx.EXPAND, 5)
        main_sizer.Add(self.start_btn, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        log_label = wx.StaticText(self, wx.ID_ANY, "Log")
        log_sizer.Add(log_label, 0, 0, 0)
        log_sizer.Add(self.log_text, 1, wx.EXPAND, 0)
        main_sizer.Add(log_sizer, 1, wx.ALL | wx.EXPAND, 5)
        self.SetSizer(main_sizer)
        self.Layout()
        # end wxGlade

    def on_about(self, event):  # wxGlade: MyPrepFrame.<event_handler>
        print("Event handler 'on_about' not implemented!")
        event.Skip()

    def on_exit(self, event):  # wxGlade: MyPrepFrame.<event_handler>
        print("Event handler 'on_exit' not implemented!")
        event.Skip()

    def on_base_file_btn(self, event):  # wxGlade: MyPrepFrame.<event_handler>
        print("Event handler 'on_base_file_btn' not implemented!")
        event.Skip()

    def on_base_plot_btn(self, event):  # wxGlade: MyPrepFrame.<event_handler>
        print("Event handler 'on_base_plot_btn' not implemented!")
        event.Skip()

    def on_file_btn(self, event):  # wxGlade: MyPrepFrame.<event_handler>
        print("Event handler 'on_file_btn' not implemented!")
        event.Skip()

    def on_flightlog_btn(self, event):  # wxGlade: MyPrepFrame.<event_handler>
        print("Event handler 'on_flightlog_btn' not implemented!")
        event.Skip()

    def on_start_btn(self, event):  # wxGlade: MyPrepFrame.<event_handler>
        print("Event handler 'on_start_btn' not implemented!")
        event.Skip()

# end of class MyPrepFrame

class MyApp(wx.App):
    def OnInit(self):
        self.frame = MyPrepFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
