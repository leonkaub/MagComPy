#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.6 on Wed Feb 24 10:43:44 2021
#

import wx

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyDialog(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyDialog.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.prep_btn = wx.Button(self, wx.ID_ANY, "File preparation")
        self.scalar_btn = wx.Button(self, wx.ID_ANY, "Scalar compensation")
        self.vector_btn = wx.Button(self, wx.ID_ANY, "Vector compensation")
        self.crossings_btn = wx.Button(self, wx.ID_ANY, "Compute crossings")
        self.exit_btn = wx.Button(self, wx.ID_ANY, "Exit")
        self.about_btn = wx.Button(self, wx.ID_ANY, "About")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.on_prep_btn, self.prep_btn)
        self.Bind(wx.EVT_BUTTON, self.on_scalar_btn, self.scalar_btn)
        self.Bind(wx.EVT_BUTTON, self.on_vector_btn, self.vector_btn)
        self.Bind(wx.EVT_BUTTON, self.on_crossings_btn, self.crossings_btn)
        self.Bind(wx.EVT_BUTTON, self.on_exit, self.exit_btn)
        self.Bind(wx.EVT_BUTTON, self.on_about, self.about_btn)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyDialog.__set_properties
        self.SetTitle("MagCompPy")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyDialog.__do_layout
        main_sizer = wx.BoxSizer(wx.VERTICAL)
        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        btn_sizer = wx.BoxSizer(wx.HORIZONTAL)
        title_label = wx.StaticText(self, wx.ID_ANY, "MagComPy")
        title_label.SetFont(wx.Font(15, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, "Segoe UI"))
        main_sizer.Add(title_label, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 5)
        description = wx.StaticText(self, wx.ID_ANY, "Please choose one of the following tools", style=wx.ALIGN_CENTER)
        description.Wrap(300)
        main_sizer.Add(description, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 5)
        main_sizer.Add(self.prep_btn, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 5)
        btn_sizer.Add(self.scalar_btn, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
        btn_sizer.Add(self.vector_btn, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
        main_sizer.Add(btn_sizer, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 5)
        main_sizer.Add(self.crossings_btn, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 5)
        static_line_1 = wx.StaticLine(self, wx.ID_ANY)
        main_sizer.Add(static_line_1, 0, wx.EXPAND, 0)
        sizer_1.Add(self.exit_btn, 0, wx.ALL, 5)
        sizer_1.Add(self.about_btn, 0, wx.ALL, 5)
        main_sizer.Add(sizer_1, 1, wx.ALIGN_CENTER_HORIZONTAL, 0)
        self.SetSizer(main_sizer)
        main_sizer.Fit(self)
        self.Layout()
        # end wxGlade

    def on_prep_btn(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_prep_btn' not implemented!")
        event.Skip()

    def on_scalar_btn(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_scalar_btn' not implemented!")
        event.Skip()

    def on_vector_btn(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_vector_btn' not implemented!")
        event.Skip()

    def on_crossings_btn(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_crossings_btn' not implemented!")
        event.Skip()

    def on_exit(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_exit' not implemented!")
        event.Skip()

    def on_about(self, event):  # wxGlade: MyDialog.<event_handler>
        print("Event handler 'on_about' not implemented!")
        event.Skip()

# end of class MyDialog

class MyApp(wx.App):
    def OnInit(self):
        self.dialog = MyDialog(None, wx.ID_ANY, "")
        self.SetTopWindow(self.dialog)
        self.dialog.ShowModal()
        self.dialog.Destroy()
        return True

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
